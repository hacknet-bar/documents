{"./":{"url":"./","title":"Introduction","keywords":"","body":"简介懒得写2333 "},"mainline.html":{"url":"mainline.html","title":"Mainline","keywords":"","body":""},"labyrinths.html":{"url":"labyrinths.html","title":"Labyrinths","keywords":"","body":""},"extension.html":{"url":"extension.html","title":"Basic","keywords":"","body":"(Written By Pitiedwzr,Err0r233) 欢迎加入制作扩展的队伍中！首先，在阅读本指南之前，请将Hacknet与迷宫DLC通关一遍，并且有一定的英文基础（工地英语也行，谷歌翻译）。 讲在前面，关于Hacknet拓展的一些注意事项： 字库特别的少，一个鸽子的鸽都会显示成问号；Actions的部分flag未实装，我会在Actions章节讲解。 接下来看一个扩展的基本构成： Actions：触发 Docs：文档（新闻，论坛等） Factions：等于Actions HackerScripts：黑客脚本（naix那种） Missions：任务 Music：音乐 Nodes：节点 People：人口 用于AcademicDatabase 通用医疗 Theme：主题 Web：网页 ExtensionInfo：扩展信息 Intro：开始时的文字 Logo：扩展标志 WorkshopLogo：创意工坊相关，放到以后再讲 了解了这些之后，我们就可以开始制作扩展了。对于新人来说，我推荐使用官方提供的模板BlankExtension（你要是足够强 也可以自己写）找到blank（steamapps\\/common\\/Hacknet\\/Extension）复制一份模板，并将文件名改成自己的扩展名。打开模板，把EDIT_ME_ExtensionInfo改为ExtensionInfo。打开它，会有这些东西： Name：扩展名称 AllowSaves：是否自动保存 StartingVisibleNodes：开始时显示的节点 StartingMission：开始时的任务 StartingActions：开始时启动的触发 Description：介绍 Faction：派系 StartsWithTutorial：启动时是否有教程程序 HasIntroStartup：在扩展开始时是否有文字 StartingTheme：开始时的主题 IntroStartupSong：扩展启动时的音乐 SequencerTargetID：Sequencer的目标节点ID SequencerSpinUpTime：Sequencer预热时间（不确定） SequencerFlagRequiredForStart：Sequencer启动时必要的条件（感谢Err0r233的修正） ActionsToRunOnSequencerStart：Sequencer启动时的触发 WorkshopDescription，WorkshopLanguage，WorkshopVisibility，WorkshopTags，WorkshopPreviewImagePath，WorkshopPublishID等都是与创意工坊有关的内容，后面再讲。 另外，我们还要增加一条设置语言的语句： zh-cn 其他语言的设置： 当你将这些东西修改完成后，恭喜你！你已经向制作扩展迈出了第一步！不过，也不要太得意，因为这篇教程只是入门，离制作一个成功的扩展还差得很远。 "},"introstartuphackerscripts.html":{"url":"introstartuphackerscripts.html","title":"IntroStartup&HackerScripts","keywords":"","body":"1. IntroStartup 详见以下例子： -------------You received a new message------------- Hi. This thing looks so wired… Nevermind. Agent, I need your help… My name is Pitiedwzr, be ready for your unforgettable journey. ------------- B O O T I N G------------- 那么这一段代码要如何实现呢？ First, 在你的拓展文件夹内新建一个txt文档，并改名为Intro.txt 然后在里面输入你想要的内容 接下来保存 接下来打开ExtensionsInfo.xml 将HasIntroStartup设置成true （设置成false可以跳过启动画面，便于测试） 接下来就是对于文段的讲解 由于Hacknet令人生草的设置，IntroStartup不能设置中文，否则就会出现如下结果 图中的???????就是我输入的中文（这是在语言设置为en-us时，在zh-cn下是方框） 那要如何输入中文呢？ 留给你一个小问题 2. HackerScript HackerScript是一个黑客的脚本，最经典的脚本就是Naix的脚本了 下面我们就以Naix的脚本来分析HackerScript config [TARGET_COMP] [SOURCE_COMP] 0.2 $#%#$ connect $#%#$ delay 2 $#%#$ openPort 21 $#%#$ openPort 22 $#%#$ openPort 25 $#%#$ openPort 80 $#%#$ delay 2 $#%#$ stopMusic $#%#$ clearTerminal $#%#$ writel WHO $#%#$ writel DO $#%#$ writel YOU $#%#$ writel THINK $#%#$ writel YOU $#%#$ writel ARE $#%#$ writel ? $#%#$ delay 2 $#%#$ delete /sys x-server.sys $#%#$ startMusic $#%#$ forkbomb $#%#$ disconnect $#%#$ 对于这段文本，我们就来分析一下它的成分 config [TARGET_COMP] [SOURCE_COMP] 0.2 $#%#$ 每个HackerScript必须且一定要打在开头的部分 TargetComp：目标PC SourceComp：攻击者PC 关于targetcomp和sourcecomp，我们会在Actions章节讲解 0.2：基础延迟 每一个命令都会在上个命令执行完毕后0.2s之后触发，可调节 connect $#%#$ 连接到目标PC上，如果那是玩家的电脑，就会显示INCOMING CONNECTION的红条 delay 2 $#%#$ 延迟。与基础延迟不同，他是专门在上个命令执行完毕后等待2s再触发下个指令，可以与基础延迟叠加 openPort 21 $#%#$ 开放21号端口。 你也可以更改数字号来改变开放的端口。 stopMusic $#%#$ 停止音乐，这个不经常用到 clearTerminal $#%#$ 清除Terminal窗口，相当于打clear指令 writel WHO $#%#$ 在Terminal窗口上显示内容，若使用中文会造成和Intro一样的乱码效果 delete /sys x-server.sys $#%#$ 删除sys文件夹下的x-server.sys 若将x-server.sys替换成* 则为清空sys文件夹 forkbomb $#%#$ 使你的电脑蓝屏… 有的时候为了让你的剧情变得更加精彩可以使用这个 disconnect $#%#$ 断开链接，没多大必要，还会在PC上留下断链日志 这个就是Naix黑入你电脑并删除你电脑上x-server.sys的脚本 但是！ 相信玩过几周目的玩家都知道,Forkbomb是可以在手速快的情况下kill掉的 这就需要更高级的黑客脚本： config [TARGET_COMP] [SOURCE_COMP] 0.2 $#%#$ hideRam $#%#$ clearTerminal $#%#$ delay 2 $#%#$ writel Alert! $#%#$ delay 2 $#%#$ writel ——FinalEnd Emergency Attack——$#%#$ delay 2 $#%#$ writel Sorry.$#%#$ delay 2 $#%#$ delete /sys x-server.sys $#%#$ writel Y O U A R E C O N N E C T I N G$#%#$ delay 2 $#%#$ writel A S P E C I A L N O D E $#%#$ delay 3 $#%#$ writel It's time. . . . . . $#%#$ delay 2 $#%#$ writel Good Bye.$#%#$ delay 3 $#%#$ writel ——Memory Overflow——$#%#$ delay 2 $#%#$ forkbomb $#%#$ forkbomb $#%#$ forkbomb $#%#$ forkbomb $#%#$ showRam $#%#$ forkbomb $#%#$ delay 0.25 $#%#$ writel —FinalEnd Emergency Attack Completed—$#%#$ disconnect $#%#$ 为大家标注的红色的地方就是值得注意的地方 hideRam $#%#$ 此命令能够隐藏你的RAM栏（0MB/761MB那个） 你将看不到Forkbomb的显示 但是需要showRAM为玩家再次显示RAM栏，否则RAM栏将一直不会显示 （或许可以做一些奇怪的东西） forkbomb $#%#$ forkbomb $#%#$ forkbomb $#%#$ forkbomb $#%#$ showRam $#%#$ forkbomb $#%#$ forkbomb是可以叠加的，所以多个forkbomb可以让电脑瞬间爆炸 另外夹了一个showRam也是照应上面，令玩家重新看到Ram 但是！ 你以为这么简单吗？ 有的大佬甚至可以不用看Ram，仅仅只用Terminal窗口就可以kill你的forkbomb 所以，我们还有更加高级的办法去解决。这一个方法我会和Hackerscripts的触发一并放在Actions章节讲解。 "},"webpeople.html":{"url":"webpeople.html","title":"Web&People","keywords":"","body":"1. Web Web是一个网页服务器的储存资料文件夹… 比如Hacknet中的Nortron网页服务器的源码就储存在那 如果你有HTML的基础是可以轻轻松松编写一个web的 但作者太垃圾了，不会写 所以我就直接搬了… Hacknet web资源都在steam\\steamapps\\common\\Hacknet\\Content的Web文件夹中，如果是html的大佬可以自己查阅 本萌新在此不过多展开 2. People People，也就是人口，在Hacknet中虚构的人口。 比如CSEC中的叫你删除 学位的那个人就是一个虚构人物 那么我们要怎么才能创建出一个People呢？ 在ExtensionsInfo同目录文件夹下创建People文件夹（若已经有，可以省略这一步） 从IntroExtension复制模板（ExamplePeople.xml）然后打开 题外话：我的导师Forever天蓝说过 IntroExtension是一本百科全书_ 有什么事都可以去查阅它，所以我希望大家能够善用IntroExtension 第三步，编辑 如果你已经成功打开ExamplePeople.xml 你应该可以看到上图界面 这是这个人的基本信息： Person id: 这个人的代号 其实是方便编辑者编辑的 Handle: 不知道如何翻译，亲测只需跟PersonID一样即可 First name和last name不必解释 IsMale：是否是男性 ForceHasNeopals: 是否有Neopals的点数 出生地名字：加利福尼亚 可以改成自己想要的，甚至可以打Unknown Bachelor of Software Engineering Bachelor of Business Management Degrees: 学历 一个人可以拥有多个学历 gpa：就是点数… 可以随便改 AA 178 Commas,Separate,Allergies Spironolactone x70 bi-monthly :: Aldosterone Inhibitor as a cardiac regulator You can write whatever you want here! These notes show up in the medical record too. You can include IP addresses and passwords etc here if you want. 上面是用于通用医疗数据库的关于医疗的信息 Blood：血型 Height：身高 单位：cm Allergies：过敏症…? Perscription：处方 随便写就完事了 Notes：医疗记录 17/02/1990 09:00:00 出生时间，用于通用医疗数据库 These notes are never used in-game, but can be handy to keep track of stuff for your own purposes. 在/Medical下面的笔记是永远不会出现在游戏中的 打笔记专用… "}}